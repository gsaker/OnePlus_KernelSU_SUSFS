name: Build OnePlus Open Kernel with Docker Support

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: false
      ksun_branch:
        description: "Choose KernelSU Next Branch"
        required: true
        type: choice
        options:
          - stable
          - next
        default: next
      android13-5_15_susfs_branch:
        description: "Choose SusFS Branch for android13-5.15"
        type: string
        default: "gki-android13-5.15"
      
jobs:
  build-oneplus-open:
    name: Build OnePlus Open (OP-OPEN, kalama, android13, 5.15, ${{ inputs.ksun_branch }})
    runs-on: ubuntu-latest
    
    steps:
      - name: Set SusFS Branch for OnePlus Open
        id: get-susfs-branch
        run: |
          # OnePlus Open uses android13-5.15
          SUSFS_BRANCH="${{ inputs.android13-5_15_susfs_branch }}"
          
          if [[ -z "$SUSFS_BRANCH" ]]; then
            SUSFS_BRANCH="gki-android13-5.15"
          fi
          
          echo "susfs_branch=$SUSFS_BRANCH" >> $GITHUB_OUTPUT
          echo "Using SUSFS branch: $SUSFS_BRANCH"

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build OnePlus Open Kernel
        uses: ./.github/actions
        with:
          model: OP-OPEN
          soc: kalama
          branch: oneplus/sm8550
          manifest: oneplus_open_v.xml
          android_version: android13
          kernel_version: "5.15"
          ksun_branch: ${{ inputs.ksun_branch }}
          susfs_branch: ${{ steps.get-susfs-branch.outputs.susfs_branch }}

  trigger-release:
    needs:
      - build-oneplus-open
    runs-on: ubuntu-latest
    if: ${{ inputs.make_release }}
    env:
      REPO_OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_NAME: "OnePlus Open Kernel With KernelSU Next & SUSFS v1.5.9 + Docker Support"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Generate and Create New Tag
        run: |
          BASE_TAG="v1.5.9-open-r0"
          LATEST_TAG=$(gh api repos/$REPO_OWNER/$REPO_NAME/tags --jq '.[] | select(.name | startswith("v1.5.9-open")) | .name' | head -1)
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="$BASE_TAG"
          else
            LATEST_TAG=$(printf "%s\n%s\n" "$LATEST_TAG" "$BASE_TAG" | sort -rV | head -n1)
          fi
          NEW_TAG=$(echo "$LATEST_TAG" | awk -F'-r' '{
            split($0, parts, "-r");
            if (parts[2] == "") {
              suffix = 1;
            } else {
              suffix = parts[2] + 1;
            }
            printf "%s-r%d", parts[1], suffix;
          }')
          echo "New tag: $NEW_TAG"
          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      - name: Generate Release Notes
        id: generate-notes
        run: |
          echo "=== Building OnePlus Open release notes ==="
          cat << EOF > release_notes.md
          # OnePlus Open Kernel with Docker Support
          
          This release contains KernelSU Next and SUSFS v1.5.9 specifically built for OnePlus Open with full Docker containerization support.
          
          ## Links
          - **SUSFS Module**: https://github.com/sidex15/ksu_module_susfs  
          - **KernelSU-Next Manager**: https://github.com/KernelSU-Next/KernelSU-Next  
          
          ## Device Support
          - **OnePlus Open** (OP-OPEN)
          - **SOC**: Snapdragon 8 Gen 2 (SM8550)
          - **Android Version**: Android 13
          - **Kernel Version**: 5.15
          
          ## Features
          - [+] KernelSU-Next
          - [+] SUSFS v1.5.9
          - [+] **Full Docker Support** (All containerization features)
          - [+] Wireguard Support
          - [+] Maphide LineageOS Detections
          - [+] Futile Maphide for jit-zygote-cache Detections
          - [+] Magic Mount Support
          - [+] Ptrace message leak fix for kernels < 5.16
          - [+] Manual Hooks [scope_min_manual_hooks_v1.4]
          - [+] CONFIG_TMPFS_XATTR Support [Mountify Support]
          - [+] BBR v1 Support
          
          ## Docker Features Added
          - [+] Complete CGroups support (CPU, Memory, Block I/O, Network)
          - [+] All Linux Namespaces (PID, Network, User, UTS, IPC, Time)
          - [+] OverlayFS storage driver
          - [+] Netfilter and IPTables support
          - [+] Bridge networking and VETH devices
          - [+] IPVS load balancing
          - [+] Security modules (AppArmor, SECCOMP)
          - [+] Device Mapper for storage backends
          
          ## Installation
          1. Flash the kernel ZIP using a custom recovery or Kernel Flasher
          2. Install KernelSU-Next APK
          3. Install SUSFS module through KernelSU
          4. Reboot and verify Docker compatibility with:
             \`\`\`bash
             curl -fsSL https://github.com/moby/moby/raw/master/contrib/check-config.sh | sh
             \`\`\`
          
          ## ⚠️ Important Notes
          - **Backup your data** before flashing
          - **Keep original boot images** for recovery
          - This kernel **voids your warranty**
          - Tested on OnePlus Open with OxygenOS
          
          **Proceed at your own risk!**
          EOF
          
          echo "--- Release Notes Created ---"
          cat release_notes.md

      - name: Create GitHub Release
        run: |
          gh release create "${{ env.NEW_TAG }}" \
            --repo "${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}" \
            --title "${{ env.RELEASE_NAME }}" \
            --notes-file release_notes.md \
            --prerelease

      - name: Upload OnePlus Open Kernel
        run: |
          for file in ./downloaded-artifacts/*/AnyKernel3_OP-OPEN_*.zip; do
            if [ -f "$file" ]; then
              echo "Uploading OnePlus Open kernel: $file"
              gh release upload "${{ env.NEW_TAG }}" "$file" --clobber
            fi
          done
